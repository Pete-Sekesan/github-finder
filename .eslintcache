[{"/Users/petersekesan/Desktop/Projects/github-finder/src/index.js":"1","/Users/petersekesan/Desktop/Projects/github-finder/src/App.js":"2","/Users/petersekesan/Desktop/Projects/github-finder/src/reportWebVitals.js":"3","/Users/petersekesan/Desktop/Projects/github-finder/src/components/layout/Navbar.js":"4","/Users/petersekesan/Desktop/Projects/github-finder/src/components/users/UserItem.js":"5","/Users/petersekesan/Desktop/Projects/github-finder/src/components/users/Users.js":"6","/Users/petersekesan/Desktop/Projects/github-finder/src/components/layout/Spinner.js":"7","/Users/petersekesan/Desktop/Projects/github-finder/src/components/users/Search.js":"8","/Users/petersekesan/Desktop/Projects/github-finder/src/components/layout/Alert.js":"9","/Users/petersekesan/Desktop/Projects/github-finder/src/components/Pages/About.js":"10","/Users/petersekesan/Desktop/Projects/github-finder/src/components/pages/About.js":"11","/Users/petersekesan/Desktop/Projects/github-finder/src/components/users/User.js":"12","/Users/petersekesan/Desktop/Projects/github-finder/src/components/repos/Repos.js":"13","/Users/petersekesan/Desktop/Projects/github-finder/src/components/repos/RepoItem.js":"14","/Users/petersekesan/Desktop/Projects/github-finder/src/context/github/GithubState.js":"15","/Users/petersekesan/Desktop/Projects/github-finder/src/context/github/githubReducer.js":"16","/Users/petersekesan/Desktop/Projects/github-finder/src/context/types.js":"17","/Users/petersekesan/Desktop/Projects/github-finder/src/context/github/githubContext.js":"18"},{"size":478,"mtime":1609083440355,"results":"19","hashOfConfig":"20"},{"size":2666,"mtime":1614448640348,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1609082666311,"results":"22","hashOfConfig":"20"},{"size":799,"mtime":1609869755302,"results":"23","hashOfConfig":"20"},{"size":732,"mtime":1610299371928,"results":"24","hashOfConfig":"20"},{"size":641,"mtime":1614446872955,"results":"25","hashOfConfig":"20"},{"size":291,"mtime":1609815078466,"results":"26","hashOfConfig":"20"},{"size":1295,"mtime":1614444610112,"results":"27","hashOfConfig":"20"},{"size":285,"mtime":1609820594413,"results":"28","hashOfConfig":"20"},{"size":266,"mtime":1609869311175,"results":"29","hashOfConfig":"20"},{"size":266,"mtime":1609869311175,"results":"30","hashOfConfig":"20"},{"size":3013,"mtime":1611369433135,"results":"31","hashOfConfig":"20"},{"size":300,"mtime":1610943050984,"results":"32","hashOfConfig":"20"},{"size":353,"mtime":1610943246556,"results":"33","hashOfConfig":"20"},{"size":1312,"mtime":1614450374214,"results":"34","hashOfConfig":"20"},{"size":515,"mtime":1614450828249,"results":"35","hashOfConfig":"20"},{"size":283,"mtime":1611419622891,"results":"36","hashOfConfig":"20"},{"size":109,"mtime":1611419291029,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1fpenwc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/petersekesan/Desktop/Projects/github-finder/src/index.js",[],["80","81"],"/Users/petersekesan/Desktop/Projects/github-finder/src/App.js",["82","83"],"import React, { useState, Fragment } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Users from \"./components/users/Users\";\nimport Search from \"./components/users/Search\";\nimport About from \"./components/pages/About\";\nimport Alert from \"./components/layout/Alert\";\nimport axios from \"axios\";\nimport User from \"./components/users/User\";\nimport GithubState from \"./context/github/GithubState\";\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  //Get single user\n  const getUser = async (username) => {\n    setLoading(true);\n    const response = await axios.get(\n      `https://api.github.com/users/${username}?&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}$client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setLoading(false);\n    setUser(response.data);\n  };\n\n  //Get user repos\n  const getUserRepos = async (username) => {\n    setLoading(true);\n    const response = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}$client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(response.data);\n    setLoading(false);\n  };\n\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return (\n    <GithubState>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={(props) => (\n                  <Fragment>\n                    <Search setAlert={showAlert} />\n                    <Users />\n                  </Fragment>\n                )}\n              />\n              <Route exact path=\"/about\" component={About} />\n              <Route\n                exact\n                path=\"/user/:login\"\n                render={(props) => (\n                  <User\n                    {...props}\n                    getUser={getUser}\n                    getUserRepos={getUserRepos}\n                    user={user}\n                    loading={loading}\n                    repos={repos}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GithubState>\n  );\n};\nexport default App;\n","/Users/petersekesan/Desktop/Projects/github-finder/src/reportWebVitals.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/layout/Navbar.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/users/UserItem.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/users/Users.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/layout/Spinner.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/users/Search.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/layout/Alert.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/Pages/About.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/pages/About.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/users/User.js",["84","85"],"import React, { Fragment, useEffect } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport  Repos from \"../repos/Repos\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst User = ({ user, loading, repos, getUser, getUserRepos, match }) => {\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n    //eslint-disable-next-line\n  }, [])\n\n  \n \n\n \n    const {\n      name,\n      company,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable,\n    } = user;\n\n    \n\n    if (loading) return <Spinner />;\n\n    return (\n      <Fragment>\n        <Link to=\"/\" className=\"btn btn-light\">\n          {\" \"}\n          Back To Search\n        </Link>\n        Hireable:{\" \"}\n        {hireable ? (\n          <i className=\"fas fa-check text-success\" />\n        ) : (\n          <i className=\"fas fa-times-circle \" />\n        )}\n        <div className=\"card grid-2\">\n          <div className=\".all-center\">\n            <img\n              src={avatar_url}\n              className=\"round-img\"\n              alt=\"\"\n              style={{ width: \"150px\" }}\n            />\n            <h1>{name}</h1>\n            <p>{location}</p>\n          </div>\n          <div>\n            {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} target=\"_blank\" className=\"btn btn-dark my-1\">\n              Visit Github Profile\n            </a>\n            <ul>\n              <li>\n                {login && (\n                  <Fragment>\n                    <strong>Username:</strong> {login}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {company && (\n                  <Fragment>\n                    <strong>Company:</strong> {company}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {blog && (\n                  <Fragment>\n                    <strong>Website:</strong> {blog}\n                  </Fragment>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"card text-center\">\n          <div className=\"badge badge-primary\">Followers: {followers}</div>\n          <div className=\"badge badge-success\">Following: {following}</div>\n          <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\n          <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\n        </div>\n\n        <Repos repos={repos} />\n      </Fragment>\n    );\n  \n}\nUser.propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    repos: PropTypes.array.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos: PropTypes.func.isRequired\n  \n};\nexport default User;\n","/Users/petersekesan/Desktop/Projects/github-finder/src/components/repos/Repos.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/components/repos/RepoItem.js",[],["86","87"],"/Users/petersekesan/Desktop/Projects/github-finder/src/context/github/GithubState.js",["88","89","90"],"import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubContext from \"./githubContext\";\nimport GithubReducer from \"./githubReducer\";\n\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from \"../types\";\n\nconst GithubState = (props) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  //Search User\n  const searchUsers = async (text) => {\n    setLoading();\n    const response = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}$client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items,\n    });\n  };\n\n  //Get User\n\n  //Get Repos\n\n  //Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  //Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\nexport default GithubState;\n","/Users/petersekesan/Desktop/Projects/github-finder/src/context/github/githubReducer.js",["91","92","93"],"import {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false,\n      };\n    case CLEAR_USERS:\n      return {\n        ...state,\n        users: [],\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/petersekesan/Desktop/Projects/github-finder/src/context/types.js",[],"/Users/petersekesan/Desktop/Projects/github-finder/src/context/github/githubContext.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":14,"column":17,"nodeType":"100","messageId":"101","endLine":14,"endColumn":25},{"ruleId":"98","severity":1,"message":"103","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":69,"column":32,"nodeType":"106","endLine":69,"endColumn":47},{"ruleId":"94","replacedBy":"107"},{"ruleId":"96","replacedBy":"108"},{"ruleId":"98","severity":1,"message":"109","line":10,"column":3,"nodeType":"100","messageId":"101","endLine":10,"endColumn":11},{"ruleId":"98","severity":1,"message":"110","line":11,"column":3,"nodeType":"100","messageId":"101","endLine":11,"endColumn":12},{"ruleId":"98","severity":1,"message":"111","line":42,"column":9,"nodeType":"100","messageId":"101","endLine":42,"endColumn":19},{"ruleId":"98","severity":1,"message":"109","line":5,"column":3,"nodeType":"100","messageId":"101","endLine":5,"endColumn":11},{"ruleId":"98","severity":1,"message":"110","line":6,"column":3,"nodeType":"100","messageId":"101","endLine":6,"endColumn":12},{"ruleId":"112","severity":1,"message":"113","line":9,"column":1,"nodeType":"114","endLine":31,"endColumn":3},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'users' is assigned a value but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["115"],["116"],"'GET_USER' is defined but never used.","'GET_REPOS' is defined but never used.","'clearUsers' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]